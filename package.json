{
  "name": "app",
  "version": "1.0.0",
  "description": "",
  "main": ".",
  "scripts": {
    "mkdir": "if [ -d ./bin ]; then rm -r ./bin; fi; mkdir ./bin",
    "preinstall": "go get -u",
    "postinstall": "npm run mkdir && GOBIN=$GOPATH/bin go install github.com/a-h/templ/cmd/templ@latest && cp $GOPATH/bin/templ ./bin && GOBIN=$GOPATH/bin go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest && cp $GOPATH/bin/sqlc ./bin && GOBIN=$GOPATH/bin go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest && cp $GOPATH/bin/migrate ./bin && GOBIN=$GOPATH/bin go install github.com/cosmtrek/air@latest && cp $GOPATH/bin/air ./bin",
    "generate:query": "./bin/sqlc generate",
    "generate:templ": "./bin/templ generate",
    "style": "npx tailwindcss -i ./public/assets/style/input.css -o ./public/assets/style/output.css --watch",
    "build": "npm run generate:query && npm run generate:templ && go build -o ./bin/app & npx tailwindcss -i ./public/assets/style/input.css -o ./public/assets/style/output.css --minify",
    "dev": "npm run generate:query && npm run generate:templ && ./bin/air",
    "prod": "npm run build && ./bin/app",
    "migrate": "./bin/migrate -verbose -path=./database/migration/ -database=postgres://$DB_USER:$DB_PASS@$DB_HOST:$DB_PORT/$DB_NAME?sslmode=$DB_SSL",
    "migrate:create": "./bin/migrate create -seq -ext .sql -dir ./database/migration/"
  },
  "author": "viery",
  "license": "ISC",
  "devDependencies": {
    "tailwindcss": "^3.3.5"
  },
  "dependencies": {
    "alpinejs": "^3.13.3",
    "htmx.org": "^1.9.9"
  }
}
